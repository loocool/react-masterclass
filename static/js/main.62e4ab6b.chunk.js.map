{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","Chart","isDark","useQuery","Math","floor","Date","now","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","price","x","time_close","y","open","high","low","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","yaxis","xaxis","axisBorder","axisTicks","labels","categories","PriceData","styled","div","PriceItem","Price","quotes","USD","ath_price","toFixed","Title","h1","props","accentColor","Buttons","Loader","span","Container","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","toggleDark","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","history","useHistory","loading","Helmet","name","onClick","push","rank","symbol","description","total_supply","max_supply","to","path","CoinsList","ul","li","cardBgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","useState","setIsDark","current","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.62e4ab6b.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n  isDark: boolean;\n}\nfunction Chart({ coinId, isDark }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n          }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => {\n                return {\n                  x: price.time_close * 1000,\n                  y: [price.open, price.high, price.low, price.close],\n                };\n              }),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? \"dark\" : \"light\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close * 1000),\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinTickers } from \"../api\";\nimport styled from \"styled-components\";\n\nconst PriceData = styled.div`\n`;\nconst PriceItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 5px 0;\n  font-size: 12px;\n  font-weight: 400;\n`;\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface IPriceProps {\n  coinId: string;\n  isDark: boolean;\n}\n\nfunction Price({ coinId, isDark }: IPriceProps) {\n  const { isLoading, data } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <PriceData>\n          <PriceItem>\n            <span>고가</span>\n            <span>${data?.quotes.USD.ath_price.toFixed(3)}</span>\n          </PriceItem>\n          <PriceItem>\n            <span>현재가</span>\n            <span>${data?.quotes.USD.price.toFixed(3)}</span>\n          </PriceItem>\n        </PriceData>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n  useHistory,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Buttons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  button {\n    border-radius: 12px;\n    padding: 2px 15px;\n  }\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 13vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ICoinProps {\n  toggleDark: () => void;\n  isDark: boolean;\n}\n\nfunction Coin({ toggleDark, isDark }: ICoinProps) {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const history = useHistory();\n  const loading = infoLoading || tickersLoading;\n  //const goBack = () => history.goBack();\n  const goHome = () => history.push(\"/\");\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n        <Buttons>\n          <button onClick={goHome}>Home</button>\n          <button onClick={toggleDark}>Toggle Dark Mode</button>\n        </Buttons>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price isDark={isDark} coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart isDark={isDark} coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  position: relative;\n  height: 13vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Buttons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface ICoinsProps {\n  toggleDark: () => void;\n}\n\nfunction Coins({ toggleDark }: ICoinsProps) {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n        <Buttons>\n          <button onClick={toggleDark}>Toggle Dark Mode</button>\n        </Buttons>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface IRouterProps {\n  toggleDark: () => void;\n  isDark: boolean;\n}\n\nfunction Router({ toggleDark, isDark }: IRouterProps) {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin isDark={isDark} toggleDark={toggleDark} />\n        </Route>\n        <Route path=\"/\">\n          <Coins toggleDark={toggleDark} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleDark = () => setIsDark((current) => !current);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router isDark={isDark} toggleDark={toggleDark} />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}